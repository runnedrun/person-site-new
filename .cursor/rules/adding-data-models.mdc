---
description: Use this rule when you need to make a new data type for data that will be stored in a new collection in Firestore
globs: 
alwaysApply: false
---

# Steps for creating a data model (data type)

All the existing models and their corresponding firestore collection names can be found in [CollectionModels.ts](mdc:data/CollectionModels.ts)

If you need to store data in a collection that isn't listed there, you can create a new model for that data. Here are the steps:

## Step 1) create a new file called [modelName].ts in the data/types folder. Here is an example:

// types/QAMessage.ts
import { Timestamp } from "@firebase/firestore"
import { MDXRemoteSerializeResult } from "next-mdx-remote"
import { Model } from "../baseTypes/Model"

export type QAMessage = Model<{
  createdAt: Timestamp
  question: string
  answer: string | null
  askedBy: string // userId
  notFound: boolean | null
  answeredAt: Timestamp | null
  serializedAnswer: MDXRemoteSerializeResult | null
}>

Note you MUST wrap the new model type in the Model<> generic type. The Model type adds the fields createdAt, updatedAt, archived and uid.

## Step 2) 

Add the model to the [CollectionModels.ts](mdc:data/CollectionModels.ts) file (data/CollectionModels). Here is an example of the same type from above, added to CollectionModels:

import { QAPairing } from "./types/QAPairing"

export type CollectionModels = {
  qaPairings: QAPairing
}

Now that models collection name and associated model type will be available as arguments to the various reader/writer methods we use in this codebase.



